// <auto-generated />
using System;
using BelenSA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BelenSA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230618220619_updatingDatabase")]
    partial class updatingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BelenSA.Models.ReasonSignUp", b =>
                {
                    b.Property<int>("ReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonId"), 1L, 1);

                    b.Property<string>("ReasonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReasonId");

                    b.ToTable("ReasonsForSigningUp");
                });

            modelBuilder.Entity("BelenSA.Models.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowTheyHeardAboutUs")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("BelenSA.Models.SubscriberReasons", b =>
                {
                    b.Property<int>("SubscriberReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberReasonId"), 1L, 1);

                    b.Property<int>("ReasonSignUpId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("SubscriberReasonId");

                    b.HasIndex("ReasonSignUpId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("SubscribersReasons");
                });

            modelBuilder.Entity("BelenSA.Models.SubscriberReasons", b =>
                {
                    b.HasOne("BelenSA.Models.ReasonSignUp", "ReasonSignUp")
                        .WithMany("SubscriberReasons")
                        .HasForeignKey("ReasonSignUpId")
                        .IsRequired();

                    b.HasOne("BelenSA.Models.Subscriber", "Subscriber")
                        .WithMany("SubscriberReasons")
                        .HasForeignKey("SubscriberId")
                        .IsRequired();

                    b.Navigation("ReasonSignUp");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("BelenSA.Models.ReasonSignUp", b =>
                {
                    b.Navigation("SubscriberReasons");
                });

            modelBuilder.Entity("BelenSA.Models.Subscriber", b =>
                {
                    b.Navigation("SubscriberReasons");
                });
#pragma warning restore 612, 618
        }
    }
}

@model BelenSA.Models.ViewModels.SubscriberViewModel
@using BelenSA.Models.Enums
@using BelenSA.Models.ViewModels


@{
    ViewData["Title"] = "Subscribe";
    UserMessagesViewModel.ErrorMessage = "";
    UserMessagesViewModel.SuccessMessage = "";
}


<h4 class="display-4">Subscribe to our newsletter</h4>
<hr />
<div class="container">
    <div class="row justify-content-center container">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-6">
                @Html.HiddenFor(model => model.SubscriberId)
                @Html.LabelFor(model => model.SubscriberName)
                @Html.TextBoxFor(model => model.SubscriberName, new {@class="form-control" ,placeholder= "Enter your name" })
                @Html.ValidationMessageFor(model => model.SubscriberName, "", new { @class = "text-danger" })
            </div>

            <div class="mt-4 col-6">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new {@class="form-control" , placeholder= "Enter your email" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
           
            <div class="mt-4 col-6">
                <label asp-for=HowTheyHeardAboutUs>How have you heard about us?</label> 
                    <select class="form-select" asp-for="HowTheyHeardAboutUs" asp-items="Html.GetEnumSelectList<HowTheyHeardEnum>()">
                        <option value="">Please select one option</option>
                    </select>
                @Html.ValidationMessageFor(model => model.HowTheyHeardAboutUs, "", new { @class = "text-danger" })
            </div>

            <div class="mt-4 col-6">
                @Html.LabelFor(model => model.ReasonsIds)
                @Html.ListBoxFor(model => model.ReasonsIds, new MultiSelectList(Model.listReasons, "Value", "Text"), new {@class = "form-control", multiple = "multiple", id = "ReasonsDropdown"  })
                @Html.ValidationMessageFor(model => model.ReasonsIds, "", new { @class = "text-danger" })
            </div>
                       
            <div class="mt-5 col-6">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        
        </form>
    </div>
</div>



@section Scripts {

    @*Script for allowing multiple selections within the reasons dropdown*@
    <script>
        $(document).ready(function(){
            $('#ReasonsDropdown').multiselect();
        })

    </script>

    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
